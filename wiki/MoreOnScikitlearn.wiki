#summary More learner in scikit-learn
#labels Tutorial

= Introduction =

More learners available within scikit-learn will be presented:
  * *SVM*
  * *RandomForest*
  * *NaiveBayes*
You can use the Huuskonen dataset for training: http://rdkit.svn.sourceforge.net/viewvc/rdkit/trunk/Docs/Book/data/solubility.train.sdf?revision=1724 and testing: http://rdkit.svn.sourceforge.net/viewvc/rdkit/trunk/Docs/Book/data/solubility.test.sdf 

= The Code =

Loading and preparing the dataset:
{{{
from rdkit import Chem 
from rdkit.Chem import Descriptors
from rdkit.ML.Descriptors import MoleculeDescriptors
from sklearn.ensemble import RandomForestClassifier
from sklearn import svm
from sklearn.naive_bayes import GaussianNB
from sklearn import cross_validation
from sklearn import metrics

trainset_file = sys.argv[1]
testset_file  = sys.argv[2]
trainset      = [x for x in Chem.SDMolSupplier(trainset_file) if x is not None]
testset       = [x for x in Chem.SDMolSupplier(testset_file) if x is not None]
}}}

Calculation of the descriptors:
{{{
nms=[x[0] for x in Descriptors._descList]
nms.remove('MolecularFormula') 
calc = MoleculeDescriptors.MolecularDescriptorCalculator(nms)
calc = MoleculeDescriptors.MolecularDescriptorCalculator(nms)
trainDescrs = [calc.CalcDescriptors(x) for x in trainset]
testDescrs  = [calc.CalcDescriptors(x) for x in testset]
cPickle.dump(trainDescrs,file('trainDescrs.pkl','wb+'))
cPickle.dump(testDescrs,file('testDescrs.pkl','wb+'))
}}}

Let's do the training:
{{{
classes = {'0':0,'1':1}
trainActs = [classes[x.GetProp('hERG_TL')] for x in trainset]
testActs  = [classes[x.GetProp('hERG_TL')] for x in testset]
}}}