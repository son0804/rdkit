
Notes on types:

If you have a method which needs to take objects as arguments, magic like this appears to work:

Py::Object PyBond::GetNbrAtom(const Py::Tuple& args){
  PyObject *pyObj=args[0].ptr();
  if( pyObj->ob_type != PyAtom::type_object() ){
    throw Py::ValueError("argument must be a PyAtom");
  }
  PyAtom *a = static_cast<PyAtom *>(pyObj);

after the contortions, _a_ contains the PyAtom that was passed as an argument.
